{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mktet\\\\OneDrive\\\\programming\\\\coinui\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Toolbar from './components/Toolbar/Toolbar';\nimport SideDrawer from './components/SideDrawer/SideDrawer';\nimport SendDrawer from './components/SideDrawer/SendDrawer/SendDrawer';\nimport ReceiveDrawer from './components/SideDrawer/ReceiveDrawer/ReceiveDrawer';\nimport WalletDrawer from './components/SideDrawer/WalletDrawer/WalletDrawer';\nimport NetworkDrawer from './components/SideDrawer/NetworkDrawer/NetworkDrawer';\nimport Backdrop from './components/Backdrop/Backdrop';\nimport DataDivs from './components/DataDivs/DataDivs';\nimport DropMenu from './components/SideDrawer/DropMenu/DropMenu';\nimport axios from 'axios';\nimport './App.css';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sideDrawerOpen: false,\n      showDropMenu: false,\n      drawerType: 'dashboard',\n      coin: [],\n      wallet: [{\n        id: 1,\n        name: \"Kral's Wallet\"\n      }, {\n        id: 2,\n        name: \"Santa's Wallet\"\n      }, {\n        id: 3,\n        name: \"I'm out of names :|\"\n      }],\n      username: 'John Doe',\n      email: 'J.Doe@gmail.com'\n    };\n\n    this.dashboard = () => {\n      this.setState({\n        drawerType: 'dashboard',\n        sideDrawerOpen: false\n      });\n    };\n\n    this.sendCoins = () => {\n      this.setState({\n        drawerType: 'send',\n        sideDrawerOpen: false\n      });\n    };\n\n    this.receiveCoins = () => {\n      this.setState({\n        drawerType: 'buy',\n        sideDrawerOpen: false\n      });\n    };\n\n    this.changeWallet = () => {\n      this.setState({\n        drawerType: 'wallets',\n        sideDrawerOpen: false\n      });\n    };\n\n    this.changeNetwork = () => {\n      this.setState({\n        drawerType: 'networks',\n        sideDrawerOpen: false\n      });\n    };\n\n    this.toggleDrawer = () => {\n      this.setState(prevState => {\n        return {\n          sideDrawerOpen: !prevState.sideDrawerOpen,\n          showDropMenu: false\n        };\n      });\n    };\n\n    this.closeDrawer = () => {\n      this.setState(() => {\n        return {\n          sideDrawerOpen: false,\n          showDropMenu: false\n        };\n      });\n    };\n\n    this.toggleDropMenu = () => {\n      this.setState(prevState => {\n        return {\n          showDropMenu: !prevState.showDropMenu,\n          sideDrawerOpen: false\n        };\n      });\n    };\n\n    this.menuBackButton = () => {\n      this.setState({\n        drawerType: 'dashboard'\n      });\n    };\n\n    this.addWallet = walletName => {\n      this.setState({\n        wallet: this.state.wallet.push({\n          walletName\n        }).sort()\n      });\n    };\n\n    this.deleteWallet = walletName => {\n      var index = this.state.wallet.indexOf(walletName);\n\n      if (index > -1) {\n        this.setState({\n          wallet: this.state.wallet.splice(index, 1)\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://min-api.cryptocompare.com/data/pricemultifull?fsyms=BTC,BCH,ETH,ETC,LTC&tsyms=USD&api_key={6457c88d1d2832d50f5a9fa2439b97fe72fe413f57b66e932fe4645c1bcffe7b}').then(res => {\n      const coin = res.data.DISPLAY;\n      this.setState({\n        coin: coin\n      });\n    });\n  } //Drawer Types\n\n\n  render() {\n    //Component Props Passed Down\n    let backdrop;\n    let sideDrawer = React.createElement(SideDrawer, {\n      show: this.state.sideDrawerOpen,\n      sendCoins: this.sendCoins,\n      receiveCoins: this.receiveCoins,\n      changeWallet: this.changeWallet,\n      changeNetwork: this.changeNetwork,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    });\n    let dropMenu = React.createElement(DropMenu, {\n      show: this.state.showDropMenu,\n      username: this.state.username,\n      useremail: this.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    });\n    let coinData = React.createElement(DataDivs, {\n      coins: this.state.coin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    });\n    let toolBar = React.createElement(Toolbar, {\n      toggleDrawer: this.toggleDrawer,\n      toggleDropMenu: this.toggleDropMenu,\n      clickDash: this.dashboard,\n      sendCoins: this.sendCoins,\n      receiveCoins: this.receiveCoins,\n      changeWallet: this.changeWallet,\n      changeNetwork: this.changeNetwork,\n      addWallet: this.addWallet,\n      removeWallet: this.removeWallet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    });\n\n    if (this.state.sideDrawerOpen || this.state.showDropMenu) {\n      backdrop = React.createElement(Backdrop, {\n        click: this.closeDrawer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      });\n    }\n\n    const displayChoice = name => {\n      if (name === 'dashboard') {\n        return coinData;\n      }\n\n      if (name === 'send') {\n        return React.createElement(SendDrawer, {\n          backbtn: this.menuBackButton,\n          coinTypes: this.state.coin,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        });\n      }\n\n      if (name === 'buy') {\n        return React.createElement(ReceiveDrawer, {\n          backbtn: this.menuBackButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        });\n      }\n\n      if (name === 'wallets') {\n        return React.createElement(WalletDrawer, {\n          wallets: this.state.wallet,\n          backbtn: this.menuBackButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        });\n      }\n\n      if (name === 'networks') {\n        return React.createElement(NetworkDrawer, {\n          backbtn: this.menuBackButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        });\n      }\n    }; //App Rendering\n\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, toolBar, sideDrawer, dropMenu, backdrop), React.createElement(\"div\", {\n      className: \"App-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, displayChoice(this.state.drawerType)));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\mktet\\OneDrive\\programming\\coinui\\src\\App.js"],"names":["React","Component","Toolbar","SideDrawer","SendDrawer","ReceiveDrawer","WalletDrawer","NetworkDrawer","Backdrop","DataDivs","DropMenu","axios","App","state","sideDrawerOpen","showDropMenu","drawerType","coin","wallet","id","name","username","email","dashboard","setState","sendCoins","receiveCoins","changeWallet","changeNetwork","toggleDrawer","prevState","closeDrawer","toggleDropMenu","menuBackButton","addWallet","walletName","push","sort","deleteWallet","index","indexOf","splice","componentDidMount","get","then","res","data","DISPLAY","render","backdrop","sideDrawer","dropMenu","coinData","toolBar","removeWallet","displayChoice","height"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Toolbar from './components/Toolbar/Toolbar';\r\nimport SideDrawer from './components/SideDrawer/SideDrawer';\r\nimport SendDrawer from './components/SideDrawer/SendDrawer/SendDrawer';\r\nimport ReceiveDrawer from './components/SideDrawer/ReceiveDrawer/ReceiveDrawer';\r\nimport WalletDrawer from './components/SideDrawer/WalletDrawer/WalletDrawer';\r\nimport NetworkDrawer from './components/SideDrawer/NetworkDrawer/NetworkDrawer';\r\nimport Backdrop from './components/Backdrop/Backdrop';\r\nimport DataDivs from './components/DataDivs/DataDivs';\r\nimport DropMenu from './components/SideDrawer/DropMenu/DropMenu';\r\nimport axios from 'axios';\r\nimport './App.css'\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    sideDrawerOpen: false,\r\n    showDropMenu: false,\r\n    drawerType: 'dashboard',\r\n    coin: [],\r\n    wallet: [{\r\n      id: 1,\r\n      name: \"Kral's Wallet\"\r\n    }, {\r\n      id: 2,\r\n      name: \"Santa's Wallet\"\r\n    }, {\r\n      id: 3,\r\n      name: \"I'm out of names :|\"\r\n    }],\r\n    username: 'John Doe',\r\n    email: 'J.Doe@gmail.com'\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('https://min-api.cryptocompare.com/data/pricemultifull?fsyms=BTC,BCH,ETH,ETC,LTC&tsyms=USD&api_key={6457c88d1d2832d50f5a9fa2439b97fe72fe413f57b66e932fe4645c1bcffe7b}').then(res => {\r\n      const coin = res.data.DISPLAY;\r\n      this.setState({coin: coin});\r\n    })\r\n  }\r\n\r\n  //Drawer Types\r\n  dashboard = () => {this.setState({drawerType: 'dashboard', sideDrawerOpen: false})}\r\n  sendCoins = () => {this.setState({drawerType: 'send', sideDrawerOpen: false})}\r\n  receiveCoins = () => {this.setState({drawerType: 'buy', sideDrawerOpen: false})}\r\n  changeWallet = () => {this.setState({drawerType: 'wallets', sideDrawerOpen: false})}\r\n  changeNetwork = () => {this.setState({drawerType: 'networks', sideDrawerOpen: false})}\r\n\r\n  //Open and close drawer\r\n  toggleDrawer = () => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        sideDrawerOpen: !prevState.sideDrawerOpen,\r\n        showDropMenu: false\r\n      }})\r\n  }\r\n\r\n  closeDrawer = () => {\r\n    this.setState(() => {\r\n      return {\r\n        sideDrawerOpen: false,\r\n        showDropMenu: false\r\n    }})\r\n  }\r\n\r\n  //Open and close drop menu\r\n  toggleDropMenu = () => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        showDropMenu: !prevState.showDropMenu,\r\n        sideDrawerOpen: false\r\n      }})\r\n  }\r\n\r\n  //Back Button for menus\r\n  menuBackButton = () => {\r\n    this.setState({\r\n      drawerType: 'dashboard'\r\n    })\r\n  }\r\n\r\n  //Add or remove wallets\r\n  addWallet = (walletName) => {\r\n    this.setState({wallet: this.state.wallet.push({walletName}).sort()\r\n    })\r\n  }\r\n\r\n  deleteWallet = (walletName) => {\r\n    var index = this.state.wallet.indexOf(walletName)\r\n    if(index > -1) {\r\n      this.setState({wallet: this.state.wallet.splice(index, 1)})\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    //Component Props Passed Down\r\n    let backdrop;\r\n    \r\n    let sideDrawer = <SideDrawer \r\n      show={this.state.sideDrawerOpen}\r\n      sendCoins={this.sendCoins}\r\n      receiveCoins={this.receiveCoins}\r\n      changeWallet={this.changeWallet}\r\n      changeNetwork={this.changeNetwork}/>\r\n\r\n    let dropMenu = <DropMenu \r\n      show={this.state.showDropMenu}\r\n      username={this.state.username}\r\n      useremail={this.state.email}/>\r\n\r\n    let coinData = <DataDivs \r\n      coins={this.state.coin}/>\r\n\r\n    let toolBar = <Toolbar \r\n      toggleDrawer={this.toggleDrawer}\r\n      toggleDropMenu={this.toggleDropMenu}\r\n      clickDash={this.dashboard}\r\n      sendCoins={this.sendCoins}\r\n      receiveCoins={this.receiveCoins}\r\n      changeWallet={this.changeWallet}\r\n      changeNetwork={this.changeNetwork}\r\n      addWallet={this.addWallet}\r\n      removeWallet={this.removeWallet}/>\r\n\r\n    if(this.state.sideDrawerOpen || this.state.showDropMenu) {\r\n      backdrop = <Backdrop\r\n        click={this.closeDrawer}/>\r\n    }\r\n\r\n    const displayChoice = (name) => {\r\n      if(name === 'dashboard'){\r\n        return coinData\r\n      }\r\n      if(name === 'send'){\r\n        return <SendDrawer \r\n          backbtn={this.menuBackButton}\r\n          coinTypes={this.state.coin}/>\r\n      }\r\n      if(name === 'buy'){\r\n        return <ReceiveDrawer \r\n          backbtn={this.menuBackButton}/>\r\n      }\r\n      if(name === 'wallets'){\r\n        return <WalletDrawer \r\n          wallets={this.state.wallet}\r\n          backbtn={this.menuBackButton}/>\r\n      }\r\n      if(name === 'networks'){\r\n        return <NetworkDrawer \r\n          backbtn={this.menuBackButton}/>\r\n      }\r\n    }\r\n    \r\n    //App Rendering\r\n    return (\r\n      <div className=\"App\">\r\n        <div style={{height: '100%'}}>\r\n          {toolBar}\r\n          {sideDrawer}\r\n          {dropMenu}\r\n          {backdrop}\r\n        </div>\r\n        <div className=\"App-content\">\r\n          {displayChoice(this.state.drawerType)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}