{"version":3,"sources":["components/SideDrawer/DrawerToggle.js","components/Toolbar/DotsToggle.js","components/Toolbar/Toolbar.js","components/SideDrawer/MainDrawer/MainDrawer.js","components/SideDrawer/SendDrawer/SendDrawer.js","components/SideDrawer/ReceiveDrawer/ReceiveDrawer.js","components/SideDrawer/WalletDrawer/WalletDrawer.js","components/SideDrawer/NetworkDrawer/NetworkDrawer.js","components/SideDrawer/SideDrawer.js","components/Backdrop/Backdrop.js","components/DataDivs/DataDivs.js","components/SideDrawer/DropMenu/DropMenu.js","App.js","serviceWorker.js","index.js"],"names":["DrawerToggle","props","react_default","a","createElement","className","onClick","click","DotsToggle","Toolbar","components_SideDrawer_DrawerToggle","toggleDrawer","components_Toolbar_DotsToggle","toggleDropMenu","MainDrawer","sendCoins","receiveCoins","changeWallet","changeNetwork","SendDrawer","name","defaultValue","value","type","ReceiveDrawer","coinType","coinAmount","fromAddress","WalletName","wallet","WalletDrawer","names","wallets","map","item","WalletDrawer_WalletName","key","id","NetworkDrawer","SideDrawer","drawerClasses","show","drawerType","SideDrawer_MainDrawer_MainDrawer","SideDrawer_SendDrawer_SendDrawer","menuBack","SideDrawer_ReceiveDrawer_ReceiveDrawer","SideDrawer_WalletDrawer_WalletDrawer","SideDrawer_NetworkDrawer_NetworkDrawer","backdrop","NumberFormat","require","DataDivs","Object","keys","coins","src","USD","IMAGEURL","alt","concat","PRICE","displayType","decimalprecision","thousandSeparator","prefix","DropMenu","menuClasses","addWallet","removeWallet","App","state","sideDrawerOpen","showDropMenu","coin","_this","setState","prevState","closeDrawer","menuBackButton","walletName","push","sort","deleteWallet","index","indexOf","splice","_this2","this","axios","get","then","res","data","DISPLAY","console","log","sideDrawer","components_SideDrawer_SideDrawer","dropMenu","SideDrawer_DropMenu_DropMenu","coinData","components_DataDivs_DataDivs","toolBar","components_Toolbar_Toolbar","Backdrop_Backdrop","style","height","Component","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b53827ac.chunk.js","sourcesContent":["import React from 'react';\r\nimport './DrawerToggle.css';\r\n\r\nconst DrawerToggle = props => {\r\n    return (\r\n        <button className=\"toggle-btn\" onClick={props.click}>\r\n            <div className=\"toggle-btn-line\" />\r\n            <div className=\"toggle-btn-line\" />\r\n            <div className=\"toggle-btn-line\" />\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default DrawerToggle","import React from 'react';\r\nimport './DotsToggle.css';\r\n\r\nconst DotsToggle = props => {\r\n    return (\r\n        <div className=\"drop-container\" >\r\n            <button className=\"dots-menu\" onClick={props.click}>\r\n                <div className=\"dots-menu-dot\" />\r\n                <div className=\"dots-menu-dot\" />\r\n                <div className=\"dots-menu-dot\" />\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DotsToggle","import React from 'react';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle';\r\nimport DotsToggle from './DotsToggle';\r\nimport './Toolbar.css';\r\n\r\nconst Toolbar = props => {\r\n    return (\r\n        <header className=\"toolbar\">\r\n            <nav className=\"toolbar-navigation\">\r\n                <div className=\"toolbar-toggle-btn\">\r\n                    <DrawerToggle click={props.toggleDrawer} />\r\n                </div>\r\n                <div className=\"toolbar-logo\">kralco</div>\r\n                <DotsToggle click={props.toggleDropMenu} />\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Toolbar;","import React from 'react';\r\nimport './MainDrawer.css';\r\n\r\nconst MainDrawer = props => {\r\n    return (\r\n        <ul className='main-drawer'>\r\n            <li><button onClick={props.sendCoins}>Send Coins</button></li>\r\n            <li><button onClick={props.receiveCoins}>Receive Coins</button></li>\r\n            <li><button onClick={props.changeWallet}>Change Wallet</button></li>\r\n            <li><button onClick={props.changeNetwork}>Change Network</button></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default MainDrawer;","import React from 'react';\r\nimport './SendDrawer.css';\r\n\r\nconst SendDrawer = props => {\r\n    let backBtn = 'Back';\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <button className=\"back-button\" onClick={props.click}>\r\n                {backBtn}\r\n            </button>\r\n            <form className=\"send-drawer\">\r\n                <div>\r\n                    <div className=\"send-item\">Coin Type:</div>\r\n                    <select className=\"send-select\" name=\"send-name\">\r\n                        <option defaultValue>Select Coin Type</option>\r\n                        <option value=\"bitcoin\">Bitcoin</option>\r\n                        <option value=\"litecoin\">Litecoin</option>\r\n                        <option value=\"ethereum\">Ethereum</option>\r\n                    </select>\r\n                    <div className=\"send-item\">Amount:</div>\r\n                    <input className=\"send-amount\" type=\"text\" name=\"send-amount\" />\r\n                    <div className=\"send-item\">To Address:</div>\r\n                    <input className=\"send-address\" type=\"text\" name=\"send-address\" />\r\n                </div>\r\n                <input className=\"send-btn\" type=\"submit\" value=\"Send Coins\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SendDrawer;","import React from 'react';\r\nimport './ReceiveDrawer.css';\r\n\r\nconst ReceiveDrawer = props => {\r\n    let backBtn = 'Back';\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <button className=\"back-button\" onClick={props.click}>\r\n                {backBtn}\r\n            </button>\r\n            <form className=\"receive-drawer\">\r\n                <div>\r\n                    <div className=\"rec-item\">Coin Type: {props.coinType}</div>\r\n                    <div className=\"rec-item\">Amount: {props.coinAmount}</div>\r\n                    <div className=\"rec-item\">From: {props.fromAddress}</div>\r\n                </div>\r\n                <input className=\"rec-submit\" type=\"submit\" value=\"OK\"/>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReceiveDrawer;","import React from 'react';\r\n\r\nimport './WalletDrawer.css';\r\n\r\nconst WalletDrawer = props => {\r\n    let backBtn = 'Back';\r\n    let names = props.wallets.map(item => {\r\n      return <WalletName \r\n        key = {item.id}\r\n        wallet = {item} />\r\n    })\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <button className=\"back-button\" onClick={props.click}>\r\n                {backBtn}\r\n            </button>\r\n            <nav className=\"wallet-drawer\">\r\n                <ul>\r\n                    {names}\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst WalletName = (props) => {\r\n    return (\r\n        <li><button>{props.wallet.name}</button></li>\r\n    );\r\n  }\r\n\r\nexport default WalletDrawer;","import React from 'react';\r\nimport './NetworkDrawer.css';\r\n\r\nconst NetworkDrawer = props => {\r\n    let backBtn = 'Back';\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <button className=\"back-button\" onClick={props.click}>\r\n                {backBtn}\r\n            </button>\r\n            <nav className=\"network-drawer\">\r\n                <select className=\"net-select\">\r\n                    <option defaultValue>Select a Network</option>\r\n                    \r\n                </select>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NetworkDrawer;","import React from 'react';\r\nimport MainDrawer from './MainDrawer/MainDrawer';\r\nimport SendDrawer from './SendDrawer/SendDrawer';\r\nimport ReceiveDrawer from './ReceiveDrawer/ReceiveDrawer';\r\nimport WalletDrawer from './WalletDrawer/WalletDrawer';\r\nimport NetworkDrawer from './NetworkDrawer/NetworkDrawer';\r\nimport './SideDrawer.css';\r\n\r\nconst SideDrawer = props => {\r\n    let drawerClasses = 'side-drawer';\r\n    if(props.show){\r\n        drawerClasses = 'side-drawer open';\r\n    }\r\n\r\n    const DrawerChoice = (name) => {\r\n        if (name === 'main-drawer' && props.show){\r\n            return <MainDrawer\r\n                sendCoins={props.sendCoins}\r\n                receiveCoins={props.receiveCoins}\r\n                changeWallet={props.changeWallet}\r\n                changeNetwork={props.changeNetwork}/>\r\n        }\r\n        if (name === 'send-coins' && props.show){\r\n            return <SendDrawer \r\n                click={props.menuBack}/>\r\n        }\r\n        if (name === 'receive-coins' && props.show){\r\n            return <ReceiveDrawer \r\n                click={props.menuBack}/>\r\n        }\r\n        if (name === 'change-wallet' && props.show){\r\n            return <WalletDrawer \r\n                wallets={props.wallets}\r\n                click={props.menuBack}/>\r\n        }\r\n        if (name === 'change-network' && props.show){\r\n            return <NetworkDrawer \r\n                click={props.menuBack}/>\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className={drawerClasses}>\r\n            {DrawerChoice(props.drawerType)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideDrawer;","import React from 'react';\r\n\r\nimport './Backdrop.css'\r\n\r\nconst backdrop = props => (\r\n    <div className=\"backdrop\" onClick={props.click} />\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport './DataDivs.css';\r\nvar NumberFormat = require('react-number-format');\r\n\r\nconst DataDivs = props => {\r\n  return (\r\n    <div className=\"coin-list\">\r\n      {Object.keys(props.coins).map((key) => (\r\n        <div id=\"crypto-container\">\r\n          <div className=\"favorites-sym\"><img src={'https://www.cryptocompare.com' + props.coins[key].USD.IMAGEURL} alt={`${key} icon`} />{key}</div>\r\n          <div className=\"favorites-price\"><NumberFormat value={props.coins[key].USD.PRICE} displayType={'text'} decimalprecision={2} thousandSeparator={true} prefix={'$'} /></div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DataDivs;","import React from 'react';\r\nimport './DropMenu.css';\r\n\r\nconst DropMenu = props => {\r\n    let menuClasses = 'drop-menu'\r\n    if(props.show){\r\n        menuClasses = 'drop-menu open'\r\n    }\r\n\r\n    return (\r\n        <div className={menuClasses}>\r\n            <button onClick={props.addWallet}>Add Wallet</button>\r\n            <button onClick={props.removeWallet}>Remove Wallet</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DropMenu;","import React, {Component} from 'react';\r\nimport Toolbar from './components/Toolbar/Toolbar';\r\nimport SideDrawer from './components/SideDrawer/SideDrawer';\r\nimport Backdrop from './components/Backdrop/Backdrop';\r\nimport DataDivs from './components/DataDivs/DataDivs';\r\nimport DropMenu from './components/SideDrawer/DropMenu/DropMenu';\r\nimport axios from 'axios';\r\nimport './App.css'\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    sideDrawerOpen: false,\r\n    showDropMenu: false,\r\n    drawerType: '',\r\n    coin: [],\r\n    wallet: [{\r\n      id: 1,\r\n      name: \"Kral's Wallet\"\r\n    }, {\r\n      id: 2,\r\n      name: \"Santa's Wallet\"\r\n    }, {\r\n      id: 3,\r\n      name: \"I'm out of names :|\"\r\n    }]\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('https://min-api.cryptocompare.com/data/pricemultifull?fsyms=BTC,BCH,ETH,ETC,LTC&tsyms=USD&api_key={6457c88d1d2832d50f5a9fa2439b97fe72fe413f57b66e932fe4645c1bcffe7b}').then(res => {\r\n      const coin = res.data.DISPLAY;\r\n      console.log(coin);\r\n      this.setState({coin: coin});\r\n    })\r\n  }\r\n\r\n  //Drawer Types\r\n  sendCoins = () => {this.setState({drawerType: 'send-coins'})}\r\n  receiveCoins = () => {this.setState({drawerType: 'receive-coins'})}\r\n  changeWallet = () => {this.setState({drawerType: 'change-wallet'})}\r\n  changeNetwork = () => {this.setState({drawerType: 'change-network'})}\r\n\r\n  //Open and close drawer\r\n  toggleDrawer = () => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        sideDrawerOpen: !prevState.sideDrawerOpen,\r\n        showDropMenu: false,\r\n        drawerType: 'main-drawer'\r\n      }})\r\n  }\r\n\r\n  closeDrawer = () => {\r\n    this.setState(() => {\r\n      return {\r\n        sideDrawerOpen: false,\r\n        showDropMenu: false,\r\n        drawerType: ''\r\n    }})\r\n  }\r\n\r\n  //Open and close drop menu\r\n  toggleDropMenu = () => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        showDropMenu: !prevState.showDropMenu,\r\n        sideDrawerOpen: false\r\n      }})\r\n  }\r\n\r\n  //Back Button for menus\r\n  menuBackButton = () => {\r\n    this.setState({\r\n      drawerType: 'main-drawer'\r\n    })\r\n  }\r\n\r\n  //Add or remove wallets\r\n  addWallet = (walletName) => {\r\n    this.setState({wallet: this.state.wallet.push({walletName}).sort()\r\n    })\r\n  }\r\n\r\n  deleteWallet = (walletName) => {\r\n    var index = this.state.wallet.indexOf(walletName)\r\n    if(index > -1) {\r\n      this.setState({wallet: this.state.wallet.splice(index, 1)})\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    //Component Props Passed Down\r\n    let backdrop;\r\n    \r\n    let sideDrawer = <SideDrawer \r\n      show={this.state.sideDrawerOpen}\r\n      drawerType={this.state.drawerType}\r\n      wallets={this.state.wallet}\r\n      menuBack={this.menuBackButton}\r\n      sendCoins={this.sendCoins}\r\n      receiveCoins={this.receiveCoins}\r\n      changeWallet={this.changeWallet}\r\n      changeNetwork={this.changeNetwork}/>\r\n\r\n    let dropMenu = <DropMenu \r\n      show={this.state.showDropMenu}/>\r\n\r\n    let coinData = <DataDivs \r\n      coins={this.state.coin}/>\r\n\r\n    let toolBar = <Toolbar \r\n      toggleDrawer={this.toggleDrawer}\r\n      toggleDropMenu={this.toggleDropMenu}\r\n      addWallet={this.addWallet}\r\n      removeWallet={this.removeWallet}/>\r\n\r\n    if(this.state.sideDrawerOpen || this.state.showDropMenu) {\r\n      backdrop = <Backdrop\r\n        click={this.closeDrawer}/>\r\n    }\r\n    \r\n    //App Rendering\r\n    return (\r\n      <div className=\"App\">\r\n        <div style={{height: '100%'}}>\r\n          {toolBar}\r\n          {sideDrawer}\r\n          {dropMenu}\r\n          {backdrop}\r\n        </div>\r\n        <div className=\"App-content\">\r\n          <div className=\"dollar-value\">\r\n            <h4>Favorites</h4>\r\n          </div>\r\n          {coinData}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}